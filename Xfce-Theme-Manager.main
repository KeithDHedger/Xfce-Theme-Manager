#!/bin/bash

#------------------------------------------------------#
#                                                      #
#   Xfce-Theme-Manager                                 #
#                                                      #
#   Â©K.D.Hedger 2012                                   #
#                                                      #
#   Released under GPL ie do what you want with it     #
#                                                      #
#                                                      #
#------------------------------------------------------#
###MAIN###
init ()
{
	GTKDIALOG=gtkdialog

	MAKEPICS=0

	export OLDICONS=$(xfconf-query -c xsettings -vp /Net/IconThemeName)
	export OLDBORDER=$(xfconf-query -c xfwm4 -vp /general/theme)
	export OLDCONTROLS=$(xfconf-query -c xsettings -vp /Net/ThemeName)
	export OLDCONTROLS=$(xfconf-query -c xsettings -vp /Net/ThemeName)

	export -f setframe
	export -f setcontrols
	export -f seticons
	export -f makeiconnames
	export -f resettheme
	export -f setmetatheme

	DB=${HOME}/.config/XfceThemeManager
	DB=/tmp/XfceThemeManager
	FRAMES=${DB}/wmf
	CONTROLS=${DB}/conts
	META=${DB}/meta
	ICONS=${DB}/icons
	
	GLOBAL=/usr/share/themes
	#GLOBAL=""

	METALIST=""
	FRAMESLIST=""
	CONTROLSLIST=""
	ICONSLIST=""

	mkdir -p $FRAMES $CONTROLS $META $ICONS
}

makethumb ()
{

	local starty=0 topleft toprite title leftside riteside
	local bottomleft bottomrite bottom
	local tlwid tlhite



	local canvasw canvash
	local com1 com2 com3 com4 com5 com6 com7 com8
	local picinfo
	local boxwid=-1
	local boxhite=80

	. "$1/xfwm4/themerc" 2>/dev/null

#	topleft="$1/xfwm4/top-left-active.*"
#	topleft=$(echo $topleft|awk '{print $NF}')
#	toprite="$1/xfwm4/top-right-active.*"
#	toprite=$(echo $toprite|awk '{print $NF}')

#	title1="$1/xfwm4/title-1-active.*"
#	title1=$(echo $title1|awk '{print $NF}')
#	title2="$1/xfwm4/title-2-active.*"
#	title2=$(echo $title2|awk '{print $NF}')
#	title3="$1/xfwm4/title-3-active.*"
#	title3=$(echo $title3|awk '{print $NF}')
#	title4="$1/xfwm4/title-4-active.*"
#	title4=$(echo $title4|awk '{print $NF}')
#	title5="$1/xfwm4/title-5-active.*"
#	title5=$(echo $title5|awk '{print $NF}')
	
topleft=( $(echo "$1"/xfwm4/top-left-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
toprite=( $(echo "$1"/xfwm4/top-right-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
title1=( $(echo "$1"/xfwm4/title-1-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
title2=( $(echo "$1"/xfwm4/title-2-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
title3=( $(echo "$1"/xfwm4/title-3-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
title4=( $(echo "$1"/xfwm4/title-4-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
title5=( $(echo "$1"/xfwm4/title-5-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )


#echo ~/.themes/G-Effects/xfwm4/close-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h"
#closedata=( $(echo ~/.themes/G-Effects/xfwm4/close-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )

#	picinfo=$(identify "$title1" 2>/dev/null|awk '{print $3}')
#	t1wid=${picinfo%x?*}
#	picinfo=$(identify "$title2" 2>/dev/null|awk '{print $3}')
#	t2wid=${picinfo%x?*}
#	picinfo=$(identify "$title3" 2>/dev/null|awk '{print $3}')
#	t3wid=${picinfo%x?*}
#	titlehite=${picinfo#?*x}
#	picinfo=$(identify "$title4" 2>/dev/null|awk '{print $3}')
#	t4wid=${picinfo%x?*}
#	picinfo=$(identify "$title5" 2>/dev/null|awk '{print $3}')
#	t5wid=${picinfo%x?*}

#	leftside="$1/xfwm4/left-active.*"
#	leftside=$(echo $leftside|awk '{print $NF}')
	riteside="$1/xfwm4/right-active.*"
	riteside=$(echo $riteside|awk '{print $NF}')
	leftside=( $(echo "$1"/xfwm4/left-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
	riteside=( $(echo "$1"/xfwm4/right-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )

#	bottomleft="$1/xfwm4/bottom-left-active.*"
#	bottomleft=$(echo $bottomleft|awk '{print $NF}')
#	bottomrite="$1/xfwm4/bottom-right-active.*"
#	bottomrite=$(echo $bottomrite|awk '{print $NF}')
#	bottom="$1/xfwm4/bottom-active.*"
#	bottom=$(echo $bottom|awk '{print $NF}')

	bottomleft=( $(echo "$1"/xfwm4/bottom-left-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
	bottomrite=( $(echo "$1"/xfwm4/bottom-right-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )
	bottom=( $(echo "$1"/xfwm4/bottom-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )

#buttons
#	close="$1/xfwm4/close-active.*"
#	close=$(echo $close|awk '{print $NF}')
	max="$1/xfwm4/maximize-active.*"
	max=$(echo $max|awk '{print $NF}')
	min="$1/xfwm4/hide-active.*"
	min=$(echo $min|awk '{print $NF}')
	menu="$1/xfwm4/menu-active.*"
	menu=$(echo $menu|awk '{print $NF}')

close=( $(echo "$1"/xfwm4/close-active.*|awk '{print $NF}'|xargs identify -format "%i %w %h") )

#menu button
	picinfo=$(identify "$menu" 2>/dev/null|awk '{print $3}')
	menuwid=${picinfo%x?*}
	menuhite=${picinfo#?*x}

#close
#	picinfo=$(identify "$close" 2>/dev/null|awk '{print $3}')
#	closewid=${picinfo%x?*}
#	closehite=${picinfo#?*x}

#max
	picinfo=$(identify "$max" 2>/dev/null|awk '{print $3}')
	maxwid=${picinfo%x?*}
	maxhite=${picinfo#?*x}
#min
	picinfo=$(identify "$min" 2>/dev/null|awk '{print $3}')
	minwid=${picinfo%x?*}
	minhite=${picinfo#?*x}
	
#top left	
#	picinfo=$(identify "$topleft" 2>/dev/null|awk '{print $3}')
#	tlwid=${picinfo%x?*}
#	tlhite=${picinfo#?*x}

#top rite
#	picinfo=$(identify "$toprite" 2>/dev/null|awk '{print $3}')
#	trwid=${picinfo%x?*}
#	trhite=${picinfo#?*x}

#bottom left
#	picinfo=$(identify "$bottomleft" 2>/dev/null |awk '{print $3}')
#	blwid=${picinfo%x?*}
#	blhite=${picinfo#?*x}

#bottom rite
#	picinfo=$(identify "$bottomrite" 2>/dev/null |awk '{print $3}')
#	brwid=${picinfo%x?*}
#	brhite=${picinfo#?*x}

#left side
#	picinfo=$(identify "$leftside" 2>/dev/null |awk '{print $3}')
#	slwid=${picinfo%x?*}
#	slhite=${picinfo#?*x}

#	picinfo=$(identify "$riteside"  2>/dev/null|awk '{print $3}')
#	srwid=${picinfo%x?*}
#	srhite=${picinfo#?*x}

#	picinfo=$(identify "$bottom" 2>/dev/null |awk '{print $3}')
#	botwid=${picinfo%x?*}
#	bothite=${picinfo#?*x}

#leftsegwidth
	lsegwid=$((menuwid+button_spacing))

#midsegwidth

#rightsegwidth
	rsegwid=$((close[1]+maxwid+minwid+(button_spacing*3)))

#title
	com1="image  SrcOver 0,0 0,0 \"$(echo $topleft)\""

	com2_1="image  SrcOver ${topleft[1]},0 $lsegwid,${title3[2]} \"$(echo ${title1[0]})\""
	com2_2="image  SrcOver $((topleft[1]+lsegwid)),0 0,0 \"$(echo ${title2[0]})\""
	com2_3="image  SrcOver $((topleft[1]+lsegwid+title2[1])),0 64,${title3[2]} \"$(echo ${title3[0]})\""
	com2_4="image  SrcOver $((topleft[1]+lsegwid+title2[1]+64)),0 0,0 \"$(echo ${title4[0]})\""
	com2_5="image  SrcOver $((topleft[1]+lsegwid+title2[1]+64+title4[1])),0 $rsegwid,${title3[2]} \"$(echo ${title5[0]})\""

	com3="image  SrcOver $((topleft[1]+lsegwid+title2[1]+64+title4[1]+rsegwid)),0 0,0 \"$(echo ${toprite[0]})\""

	totalwid=$((topleft[1]+lsegwid+title2[1]+64+title4[1]+rsegwid+toprite[1]))
	boxwid=$totalwid

#side
	com4="image  SrcOver 0,${topleft[2]} ${leftside[1]},$((boxhite-bottomleft[2]-topleft[2])) \"$(echo ${leftside[0]})\""
	com5="image  SrcOver $((boxwid-riteside[1])),${toprite[2]} ${riteside[1]},$((boxhite-bottomrite[2]-toprite[2])) \"$(echo ${riteside[0]})\""

#bottom
	com6="image  SrcOver 0,$((boxhite-bottomleft[2])) 0,0 \"$(echo ${bottomleft[0]})\""
	com7="image  SrcOver $((boxwid-bottomrite[1])),$((boxhite-bottomrite[2])) 0,0 \"$(echo ${bottomrite[0]})\""
	
	com8="image  SrcOver ${bottomleft[1]},$((boxhite-bottom[2])) $((boxwid-bottomleft[1]-bottomrite[1])),${bottom[2]} \"$(echo ${bottom[0]})\""

#dobuttons
	hiteoffset=$(((title3[2]-menuhite)/2))
	menubut="image  SrcOver $((button_offset+leftside[1])),$hiteoffset 0,0 \"$(echo $menu)\""

	hiteoffset=$(((title3[2]-close[2])/2))
	closebut="image  SrcOver $((totalwid-button_offset-rightside[1]-close[1])),$hiteoffset 0,0 \"$(echo $close)\""
	maxbut="image  SrcOver $((totalwid-button_offset-rightside[1]-close[1]-maxwid-button_spacing)),$hiteoffset 0,0 \"$(echo $max)\""
	minbut="image  SrcOver $((totalwid-button_offset-rightside[1]-close[1]-maxwid-minwid-button_spacing-button_spacing)),$hiteoffset 0,0 \"$(echo $min)\""

#canvas
	canvasw=$((totalwid))
	canvash=$((topleft[2]+32+bottomleft[2]))
canvash=$boxhite

	if [ $2 -eq 1 ];then
		gtkcom="image  SrcOver $((leftside[1])),$((starty=topleft[2])) 0,0 \"${CONTROLS}/$(basename "$1").png\""

		convert -size ${canvasw}x${canvash} canvas:transparent  -draw "$gtkcom" -draw "$com1" -draw "$com2_1" -draw "$com2_2" -draw "$com2_3" -draw "$com2_4" -draw "$com2_5" -draw "$com3" -draw "$com4" -draw "$com5" -draw "$com6" -draw "$com8" -draw "$com7" -draw "$menubut" -draw "$closebut"  -draw "$maxbut"  -draw "$minbut" "${META}/$(basename $1).bmp" &>/dev/null
	else
		convert -size ${canvasw}x${canvash} canvas:transparent -draw "$com1" -draw "$com2_1" -draw "$com2_2" -draw "$com2_3" -draw "$com2_4" -draw "$com2_5" -draw "$com3" -draw "$com4" -draw "$com5" -draw "$com6" -draw "$com8" -draw "$com7" -draw "$menubut" -draw "$closebut"  -draw "$maxbut"  -draw "$minbut" "${FRAMES}/$(basename $1).bmp" &>/dev/null
	fi
}

makemetalist ()
{
	local metaname="$1"
	local pixmap="${META}/${metaname}.bmp"
	
	METALIST=''"${METALIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	METALIST=''"${METALIST}"'<input file>'"$pixmap"'</input>'
	METALIST=''"${METALIST}"'<label>'"$metaname"'</label>'
	METALIST=''"${METALIST}"'<action>exec $SHELL -c '"setmetatheme $metaname"'</action>'
	METALIST=''"${METALIST}"'</button>'
}

makeframeslist ()
{
	local framename="$1"
	local pixmap="${FRAMES}/${framename}.bmp"
	
	FRAMESLIST=''"${FRAMESLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	FRAMESLIST=''"${FRAMESLIST}"'<input file>'"$pixmap"'</input>'
	FRAMESLIST=''"${FRAMESLIST}"'<label>'"$framename"'</label>'
	FRAMESLIST=''"${FRAMESLIST}"'<action>exec $SHELL -c '"setframe $framename"'</action>'
	FRAMESLIST=''"${FRAMESLIST}"'</button>'
}

makecontrolslist ()
{
	local controlname="$1"
	local pixmap="${CONTROLS}/${controlname}.png"
	
	CONTROLSLIST=''"${CONTROLSLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	CONTROLSLIST=''"${CONTROLSLIST}"'<input file>'"$pixmap"'</input>'
	CONTROLSLIST=''"${CONTROLSLIST}"'<label>'"$controlname"'</label>'
	CONTROLSLIST=''"${CONTROLSLIST}"'<action>exec $SHELL -c '"setcontrols $controlname"'</action>'
	CONTROLSLIST=''"${CONTROLSLIST}"'</button>'
}
makeiconslist ()
{
	local iconname="$(basename "$1")"
	local pixmap="${ICONS}/${iconname}.png"

if [ X"$pixmap" != "X" ];then
	ICONSLIST=''"${ICONSLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	ICONSLIST=''"${ICONSLIST}"'<input file>'"$pixmap"'</input>'
	ICONSLIST=''"${ICONSLIST}"'<label>'"$iconname"'</label>'
	ICONSLIST=''"${ICONSLIST}"'<action>exec $SHELL -c '"seticons $iconname"'</action>'
	ICONSLIST=''"${ICONSLIST}"'</button>'
fi
}

resettheme ()
{
	xfconf-query -c xfwm4 -p /general/theme -s "$OLDBORDER"
	xfconf-query -c xsettings -p /Net/ThemeName -s "$OLDCONTROLS"
	xfconf-query -c xsettings -p /Net/IconThemeName -s "$OLDICONS"
}

makeiconthumbs ()
{
	local iconname=$(basename "$1")
	local folderpic="$(find "$1" -iname "folder.???"|head -n1)"
	local homepic="$(find "$1" -iname "user-home*.???"|head -n1)"
	local comppic="$(find "$1" -iname "computer.???"|head -n1)"
	local drivepic="$(find "$1" -iname "*drive*harddisk*.???"|head -n1)"

	convert $folderpic $homepic $comppic $drivepic -background none +append -scale 128x32! ${ICONS}/${iconname}.png
		}

makeiconnames ()
{	
	while read
		do
			if [ ! -d "${REPLY}/cursors" ];then
				if [ $MAKEPICS -eq 1 ];then
					makeiconthumbs "$REPLY"
				fi
				makeiconslist "$REPLY"
			fi
		done < <(find ~/.icons /usr/share/icons -maxdepth 1 -mindepth 1|sort)
}

makegtknames ()
{
	while read
		do
			if [ -d "${REPLY}/gtk-2.0" ];then
				if [ $MAKEPICS -eq 1 ];then
					gtkpreview/gtkprev "$(basename "$REPLY")" "${CONTROLS}/$(basename "$REPLY").png"
				fi
				makecontrolslist "$(basename "$REPLY")"
			fi
		done < <(find ~/.themes $GLOBAL -maxdepth 1 -mindepth 1|sort )
}

makethemenames ()
{
	while read
		do
			if [ -d "${REPLY}/xfwm4" ] && [ -d "${REPLY}/gtk-2.0" ];then
				if [ $MAKEPICS -eq 1 ];then
					makethumb "$REPLY" 1
				fi
				makemetalist "$(basename "$REPLY")"
			fi
		done < <(find ~/.themes $GLOBAL -maxdepth 1 -mindepth 1|sort)
}

makebordernames ()
{
	while read
		do
			if [ -d "${REPLY}/xfwm4" ];then
				if [ $MAKEPICS -eq 1 ];then
					makethumb "$REPLY" 0 < /dev/null
				fi
				makeframeslist "$(basename "$REPLY")"
			fi
		done < <(find ~/.themes $GLOBAL -maxdepth 1 -mindepth 1|sort)

}

#set meta theme and icons if gnome index.theme file available
setmetatheme ()
{
	local icontheme
	local themename="$0"

	xfconf-query -c xfwm4 -vp /general/theme -s "$themename"
	xfconf-query -c xsettings -vp /Net/ThemeName -s "$themename"

	icontheme=$(cat ~/.themes/$themename/index.theme|grep "IconTheme"|awk -F= '{print $2}')
	if [ -d ~/.icons/$icontheme ] || [ -d /usr/share/.icons/$icontheme ];then
		xfconf-query -c xsettings -vp /Net/IconThemeName -s "$icontheme"
		return
	fi

	icontheme=$(cat /usr/share/themes/$themename/index.theme|grep "IconTheme"|awk -F= '{print $2}')
	if [ -d /usr/share/.icons/$icontheme ];then
		xfconf-query -c xsettings -vp /Net/IconThemeName -s "$icontheme"
	fi
}

setframe ()
{
	local framename="$0"
	xfconf-query -c xfwm4 -vp /general/theme -s "$framename"
}

setcontrols ()
{
	local controlname="$0"
	xfconf-query -c xsettings -vp /Net/ThemeName -s "$controlname"
}

seticons ()
{
	local iconname="$0"
	xfconf-query -c xsettings -vp /Net/IconThemeName -s "$iconname"
}


init

if [ X"$1" = "X-m" ];then
	MAKEPICS=1
fi

#makegtknames
makebordernames
echo XXXXXXXXx
#makethemenames
#makeiconnames

#main



