#!/bin/bash

#------------------------------------------------------#
#                                                      #
#   Xfce-Theme-Manager                                 #
#                                                      #
#   Â©K.D.Hedger 2012                                   #
#                                                      #
#   Released under GPL ie do what you want with it     #
#                                                      #
#                                                      #
#------------------------------------------------------#
###MAIN###
init ()
{
	GTKDIALOG=gtkdialog

	MAKEPICS=0

	export OLDICONS=$(xfconf-query -c xsettings -vp /Net/IconThemeName)
	export OLDBORDER=$(xfconf-query -c xfwm4 -vp /general/theme)
	export OLDCONTROLS=$(xfconf-query -c xsettings -vp /Net/ThemeName)
	export OLDCONTROLS=$(xfconf-query -c xsettings -vp /Net/ThemeName)
	export OLDCURSOR=$(xfconf-query -c xsettings -vp /Gtk/CursorThemeName)

	export -f setframe
	export -f setcontrols
	export -f seticons
	export -f makeiconnames
	export -f resettheme
	export -f setmetatheme
	export -f setcursor

	DB=${HOME}/.config/XfceThemeManager
	FRAMES=${DB}/wmf
	CONTROLS=${DB}/conts
	META=${DB}/meta
	ICONS=${DB}/icons
	CURSORS=${DB}/cursors
	
	GLOBAL=/usr/share/themes
	GTKPREV=$(which gtkprev)

	METALIST=""
	FRAMESLIST=""
	CONTROLSLIST=""
	ICONSLIST=""
	CURSORSLIST=""

	UPDATEPICS=0
	MAKEPICS=0

	mkdir -p $FRAMES $CONTROLS $META $ICONS $CURSORS
}

makethumb ()
{
	if [ $2 -eq 1 ];then
		$GTKPREV theme "$(basename "$1")" "$1"  "${META}/$(basename "$1").png"
	else
		$GTKPREV border "$1" "${FRAMES}/$(basename "$1").png"
	fi
}

makemetalist ()
{
	local metaname="$1"
	local pixmap="${META}/${metaname}.png"
	
	METALIST=''"${METALIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	METALIST=''"${METALIST}"'<input file>'"$pixmap"'</input>'
	METALIST=''"${METALIST}"'<label>'"$metaname"'</label>'
	METALIST=''"${METALIST}"'<action>exec $SHELL -c '"setmetatheme '"$metaname"'"'</action>'
	METALIST=''"${METALIST}"'</button>'
}

makeframeslist ()
{
	local framename="$1"
	local pixmap="${FRAMES}/${framename}.png"
	
	FRAMESLIST=''"${FRAMESLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	FRAMESLIST=''"${FRAMESLIST}"'<input file>'"$pixmap"'</input>'
	FRAMESLIST=''"${FRAMESLIST}"'<label>'"$framename"'</label>'
	FRAMESLIST=''"${FRAMESLIST}"'<action>exec $SHELL -c '"setframe '"$framename"'"'</action>'
	FRAMESLIST=''"${FRAMESLIST}"'</button>'
}

makecontrolslist ()
{
	local controlname="$1"
	local pixmap="${CONTROLS}/${controlname}.png"
	
	CONTROLSLIST=''"${CONTROLSLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	CONTROLSLIST=''"${CONTROLSLIST}"'<input file>'"$pixmap"'</input>'
	CONTROLSLIST=''"${CONTROLSLIST}"'<label>'"$controlname"'</label>'
	CONTROLSLIST=''"${CONTROLSLIST}"'<action>exec $SHELL -c '"setcontrols '"$controlname"'"'</action>'
	CONTROLSLIST=''"${CONTROLSLIST}"'</button>'
}

makeiconslist ()
{
	local showiconname="$1" iconname="$2"
	local pixmap="${ICONS}/${showiconname}.png"

if [ X"$pixmap" != "X" ];then
	ICONSLIST=''"${ICONSLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	ICONSLIST=''"${ICONSLIST}"'<input file>'"$pixmap"'</input>'
	ICONSLIST=''"${ICONSLIST}"'<label>'"$showiconname"'</label>'
	ICONSLIST=''"${ICONSLIST}"'<action>exec $SHELL -c ''seticons '"\"$iconname\""'''</action>'
	ICONSLIST=''"${ICONSLIST}"'</button>'
fi
}

makecursorslist ()
{
	local showcursorname="$1" cursorname="$2"
	local pixmap="${CURSORS}/${showcursorname}.png"

if [ X"$pixmap" != "X" ];then
	CURSORSLIST=''"${CURSORSLIST}"'<button space-expand="false" space-fill="false" image-position="2" relief="2">'
	CURSORSLIST=''"${CURSORSLIST}"'<input file>'"$pixmap"'</input>'
	CURSORSLIST=''"${CURSORSLIST}"'<label>'"$showcursorname"'</label>'
	CURSORSLIST=''"${CURSORSLIST}"'<action>exec $SHELL -c ''setcursor '"\"$cursorname\""'''</action>'
	CURSORSLIST=''"${CURSORSLIST}"'</button>'
fi
}


resettheme ()
{
	xfconf-query -c xfwm4 -p /general/theme -s "$OLDBORDER"
	xfconf-query -c xsettings -p /Net/ThemeName -s "$OLDCONTROLS"
	xfconf-query -c xsettings -p /Net/IconThemeName -s "$OLDICONS"
	xfconf-query -c xsettings -p /Gtk/CursorThemeName -s "$OLDCURSOR"
}

makeiconthumbs ()
{
	local iconpath="$1"
	local iconname="$2"

	local folderpic="$(find "$iconpath" -iname "folder.???"|head -n1)"
	local homepic="$(find "$iconpath" -iname "user-home*.???"|head -n1)"
	local comppic="$(find "$iconpath" -iname "computer.???"|head -n1)"
	local drivepic="$(find "$iconpath" -iname "*drive*harddisk*.???"|head -n1)"

	convert "$folderpic" "$homepic" "$comppic" "$drivepic" +append -scale x32 "${ICONS}/${iconname}.png" </dev/null
}

makeiconnames ()
{
	local showiconname iconname
	
	while read
		do
			if [ ! -d "${REPLY}"/cursors ];then

				if [ -e "${REPLY}"/index.theme ];then
					if ! cat "${REPLY}"/index.theme |grep -i "hidden" >/dev/null ;then
						iconname="$(basename "$REPLY")"
						showiconname=$(cat "${REPLY}"/index.theme |grep -i "name="|awk -F "=" '{print $2}')
						if [ $MAKEPICS -eq 1 ];then
							echo ""
							makeiconthumbs "$REPLY" "$showiconname"
						fi

						if [ $UPDATEPICS -eq 1 ];then
							if [ ! -e "${ICONS}/${showiconname}.png" ];then
								makeiconthumbs "$REPLY" "$showiconname"
								echo ""
							fi
						fi
						makeiconslist "$showiconname" "$iconname"
					fi
				fi
			fi
		done < <(find ~/.icons /usr/share/icons -maxdepth 1 -mindepth 1 -type d|sort)
}

makecursornames ()
{
	local showcursorname cursorname
	
	while read
		do
			if [ -d "${REPLY}"/cursors ];then

				cursorname="$(basename "$REPLY")"

				if [ -e "${REPLY}"/index.theme ];then
					showcursorname=$(cat "${REPLY}"/index.theme |grep -i "name")
					showcursorname=${showcursorname#?*= *}
				else
					showcursorname="$cursorname"
				fi

				if [ $MAKEPICS -eq 1 ];then
					echo ""
					$GTKPREV cursor "$REPLY" "$showcursorname"
				fi

				if [ $UPDATEPICS -eq 1 ];then
					if [ ! -e "${CURSORS}/${showcursorname}.png" ];then
						$GTKPREV cursor "$REPLY" "${CURSORS}/${showcursorname}.png"
						echo ""
					fi
				fi
				makecursorslist "$showcursorname" "$cursorname"
			fi
		done < <(find ~/.icons /usr/share/icons -maxdepth 1 -mindepth 1 -type d|sort)
}

makegtknames ()
{
	while read
		do
			if [ -d "${REPLY}/gtk-2.0" ];then
				if [ $MAKEPICS -eq 1 ];then
					$GTKPREV "controls" "$(basename "$REPLY")" "${CONTROLS}/$(basename "$REPLY").png"
					echo ""
				fi

				if [ $UPDATEPICS -eq 1 ];then
					if [ ! -e "${CONTROLS}/$(basename "$REPLY").png" ];then
						$GTKPREV "controls" "$(basename "$REPLY")" "${CONTROLS}/$(basename "$REPLY").png"
						echo ""
					fi
				fi
				makecontrolslist "$(basename "$REPLY")"
			fi
		done < <(find ~/.themes $GLOBAL -maxdepth 1 -mindepth 1|sort)
}

makethemenames ()
{
	while read
		do
			if [ -d "${REPLY}/xfwm4" ] && [ -d "${REPLY}/gtk-2.0" ];then
				if [ $MAKEPICS -eq 1 ];then
					makethumb "$REPLY" 1 < /dev/null
					echo ""
				fi
				if [ $UPDATEPICS -eq 1 ];then
					if [ ! -e "${META}/$(basename "$REPLY").png" ];then
						makethumb "$REPLY" 1 < /dev/null
						echo ""
					fi
				fi
				makemetalist "$(basename "$REPLY")"
			fi
		done < <(find ~/.themes $GLOBAL -maxdepth 1 -mindepth 1|sort)
}

makebordernames ()
{
	while read
		do
			if [ -d "${REPLY}/xfwm4" ];then
			((bords++))
				if [ $MAKEPICS -eq 1 ];then
					makethumb "$REPLY" 0 < /dev/null
					echo ""
				fi
				if [ $UPDATEPICS -eq 1 ];then
					if [ ! -e "${FRAMES}/$(basename "$REPLY").png" ];then
						makethumb "$REPLY" 0 < /dev/null
						echo ""
					fi
				fi
				makeframeslist "$(basename "$REPLY")"
			fi
		done < <(find ~/.themes $GLOBAL -maxdepth 1 -mindepth 1|sort)
}

#set meta theme and icons if gnome index.theme file available
setmetatheme ()
{
	local icontheme
	local themename="$0"

	xfconf-query -c xfwm4 -vp /general/theme -s "$themename"
	xfconf-query -c xsettings -vp /Net/ThemeName -s "$themename"

	icontheme=$(cat ~/.themes/"$themename"/index.theme|grep "IconTheme"|awk -F= '{print $2}')
	if [ -d ~/.icons/$icontheme ] || [ -d /usr/share/.icons/$icontheme ];then
		xfconf-query -c xsettings -vp /Net/IconThemeName -s "$icontheme"
		return
	fi

	icontheme=$(cat /usr/share/themes/$themename/index.theme|grep "IconTheme"|awk -F= '{print $2}')
	if [ -d /usr/share/.icons/$icontheme ];then
		xfconf-query -c xsettings -vp /Net/IconThemeName -s "$icontheme"
	fi
}

setframe ()
{
	local framename="$0"
	xfconf-query -c xfwm4 -vp /general/theme -s "$framename"
}

setcontrols ()
{
	local controlname="$0"

	xfconf-query -c xsettings -vp /Net/ThemeName -s "$controlname"
}

seticons ()
{
	local iconname="$0"
	xfconf-query -c xsettings -vp /Net/IconThemeName -s "$iconname"
}

setcursor ()
{
	local cursorname="$0"
	xfconf-query -c xsettings -vp /Gtk/CursorThemeName -s "$cursorname"
}

init

if [ X"$1" = "X-m" ] || [ X"$1" = "X-u" ];then

	UPDATEPICS=0
	MAKEPICS=1
	doing="Building"

	if [ X"$1" = "X-u" ];then
		doing="Updating"
		UPDATEPICS=1
		MAKEPICS=0
	fi

	makegtknames > >(zenity --text="$doing Controls DB..." --progress  --no-cancel  --auto-close --pulsate)
	makebordernames > >(zenity --text="$doing Window Frames DB..." --progress  --no-cancel  --auto-close --pulsate)
	makethemenames > >(zenity --text="$doing Meta Themes DB..." --progress  --no-cancel  --auto-close --pulsate)
	makeiconnames > >(zenity --text="$doing Icons DB..." --progress  --no-cancel  --auto-close --pulsate)
	makecursornames > >(zenity --text="$doing Cursor DB..." --progress  --no-cancel  --auto-close --pulsate)
else
	makegtknames
	makebordernames
	makethemenames
	makeiconnames
	makecursornames
fi

main

if [ -e /tmp/xfcethememanager$$ ];then
	rm /tmp/xfcethememanager$$
fi

